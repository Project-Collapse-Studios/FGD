name: Build FGD
on:
  push:
    branches:
      - master
      
  workflow_dispatch:

jobs:
  create-release:

    runs-on: ubuntu-latest
    name: Create Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - run: git fetch --tags origin
      
      - name: Get previous tag
        id: previoustag
        uses: 'WyriHaximus/github-action-get-previous-tag@v1'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Next Monotonic Release version
        id: next
        uses: WyriHaximus/github-action-next-release-version@08a7476c98e8095fad1cce0e2344c7892e17d111
        with:
          version: ${{ steps.previoustag.outputs.tag }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: ${{ github.event.inputs.version == '' }}
        with:
          tag_name: ${{ steps.next.outputs.version }}
      
  
  build:
    runs-on: ubuntu-latest
    
    needs: create-release
    if: ${{ always() && !cancelled() && needs.create-release.result == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt

      - uses: robinraju/release-downloader@v1
        with:
          repository: 'Project-Collapse-Studios/HammerAddons'
          latest: true
          fileName: 'patch.fgd'
          tarBall: false
          zipBall: false
          out-file-path: 'downloads'
  
      - run: python unify_fgd.py -d ./fgd/ --extra ./downloads/patch.fgd exp -o psc.fgd P2CE SRCTOOLS

      - run: git fetch --tags origin
      
      - name: Get previous tag
        id: previoustag
        uses: 'WyriHaximus/github-action-get-previous-tag@v1'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        if: ${{ github.event.inputs.version == '' }}
        with:
          tag_name: ${{ steps.previoustag.outputs.tag }}
          files: psc.fgd
          fail_on_unmatched_files: true